apply plugin: 'com.android.application'

android {
    def keystoreProperties = new Properties()
    try {
        keystoreProperties.load(new FileInputStream(rootProject.file("keystore.properties")))
        signingConfigs {
            release {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile rootProject.file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
            }
        }
    } catch(FileNotFoundException e) {}
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    String THINGPEDIA_URL = "https://thingpedia.stanford.edu/thingpedia"
    String SEMPRE_URL = "https://almond-nl.stanford.edu"
    String ALMOND_URL = "https://almond.stanford.edu"
    defaultConfig {
        applicationId "edu.stanford.thingengine.engine"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1103
        versionName '1.10.3'
        manifestPlaceholders = [HOCKEYAPP_APP_ID: "d6e09574c0f9434e8e20e8d8f2234285"]
        buildConfigField "String", "THINGPEDIA_URL", "\"" + THINGPEDIA_URL + "\""
        buildConfigField "String", "SEMPRE_URL", "\"" + SEMPRE_URL + "\""
        buildConfigField "String", "ALMOND_URL", "\"" + ALMOND_URL + "\""

        externalNativeBuild {
            cmake {
                cppFlags "-std=c++14 -fno-rtti"
                arguments "-DANDROID_STL=c++_shared", "-DANDROID_CPP_FEATURES=exceptions"
            }
        }
        ndk {
            abiFilters 'x86','armeabi-v7a', 'x86_64', 'arm64-v8a' //select ABIs to build APKs for
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            debuggable true
            jniDebuggable true
        }
    }

    def execTask = project.tasks.create("buildJs", Exec)
    execTask.commandLine "./build_js.sh", "./src/main/assets/", THINGPEDIA_URL, SEMPRE_URL, ALMOND_URL

    applicationVariants.all { variant ->
        variant.mergeResources.dependsOn(execTask)
        variant.mergeAssets.dependsOn(execTask)
    }
    productFlavors {
    }
    externalNativeBuild {
        cmake {
            path 'CMakeLists.txt'
        }
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.google.android.gms:play-services-location:11.0.4'
    implementation 'com.google.android.gms:play-services-maps:11.0.4'
    implementation 'com.google.android.gms:play-services-places:11.0.4'
    implementation 'com.google.android.gms:play-services-auth:11.0.4'
    implementation 'com.android.support:support-v13:28.0.0'
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.android.support:percent:28.0.0'
    implementation 'com.koushikdutta.ion:ion:2.2.1'
    implementation 'com.google.android:flexbox:0.2.3'
    implementation 'net.hockeyapp.android:HockeySDK:4.0.1'
}
